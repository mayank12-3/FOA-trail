{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/FOA/FOA/src/common/components/Tabs/Tabs.js\";\nimport React, { Component } from 'react';\nimport { Row } from 'reactstrap';\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\nimport Button from '../Button/Button';\nimport './Tabs.scss';\n\nclass Tabs extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderTabs = () => {\n      const tabStyle = this.getTabStyle();\n      return this.props.tabs ? this.props.tabs.map((tab, i) => {\n        return React.createElement(\"li\", {\n          onClick: () => this.props.onTabChange(i),\n          key: i,\n          style: tabStyle,\n          className: tab.isActive ? 'active' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, tab.title));\n      }) : [];\n    };\n\n    this.getTabStyle = () => {\n      const numberOfTabs = this.props.tabs.length;\n\n      if (numberOfTabs) {\n        const width = 100 / numberOfTabs;\n        return {\n          width: \"\".concat(width, \"%\"),\n          height: '33px'\n        };\n      }\n\n      return {};\n    };\n\n    this.getActiveSliderStyle = () => {\n      const numberOfTabs = this.props.tabs.length;\n\n      if (numberOfTabs) {\n        const width = 100 / numberOfTabs;\n\n        const activeTabIndex = this._getActiveTabIndex();\n\n        return {\n          width: \"\".concat(width, \"%\"),\n          height: '33px',\n          left: \"\".concat(width * activeTabIndex, \"%\")\n        };\n      }\n\n      return {};\n    };\n\n    this.showPrevButton = () => {\n      const activeIndex = this._getActiveTabIndex();\n\n      return activeIndex !== 0;\n    };\n\n    this.showNextButton = () => {\n      const activeIndex = this._getActiveTabIndex();\n\n      const lengthOfTabs = this.props.tabs.length;\n      return activeIndex < lengthOfTabs - 1;\n    };\n\n    this.showFinishedBurtton = () => {\n      const activeIndex = this._getActiveTabIndex();\n\n      const lengthOfTabs = this.props.tabs.length;\n      return activeIndex === lengthOfTabs - 1;\n    };\n\n    this._getActiveTabIndex = () => {\n      return this.props.tabs.findIndex(tab => tab.isActive === true);\n    };\n\n    this._getActiveTabComponent = () => {\n      const tabs = [...this.props.tabs];\n\n      const activeIndex = this._getActiveTabIndex();\n\n      return tabs[activeIndex] ? tabs[activeIndex].component : '';\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"tabs_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      title: this.props.title,\n      subheader: this.props.subHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tabs-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"active-block\",\n      style: this.getActiveSliderStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.renderTabs())), React.createElement(\"div\", {\n      className: \"tab-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this._getActiveTabComponent())), React.createElement(\"div\", {\n      className: \"tab-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.showPrevButton() ? React.createElement(Button, {\n      className: \"primary\",\n      onClick: this.props.onPrev,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Prev\") : '', this.showNextButton() && !this.props.hideNextButton ? React.createElement(Button, {\n      className: \"primary\",\n      onClick: this.props.onNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Next\") : '', this.showFinishedBurtton() ? React.createElement(Button, {\n      className: \"primary\",\n      onClick: this.props.onFinish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.props.finishText || 'Finish') : ''))));\n  }\n\n}\n\nexport default Tabs;","map":{"version":3,"sources":["/Users/mayank/Desktop/FOA/FOA/src/common/components/Tabs/Tabs.js"],"names":["React","Component","Row","Card","CardHeader","CardContent","Button","Tabs","renderTabs","tabStyle","getTabStyle","props","tabs","map","tab","i","onTabChange","isActive","title","numberOfTabs","length","width","height","getActiveSliderStyle","activeTabIndex","_getActiveTabIndex","left","showPrevButton","activeIndex","showNextButton","lengthOfTabs","showFinishedBurtton","findIndex","_getActiveTabComponent","component","render","subHeader","onPrev","hideNextButton","onNext","onFinish","finishText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row } from 'reactstrap';\nimport {\n    Card,\n    CardHeader,\n    CardContent\n} from '@material-ui/core';\nimport Button from '../Button/Button';\nimport './Tabs.scss';\n\nclass Tabs extends Component {\n\n    renderTabs = () => {\n        const tabStyle = this.getTabStyle();\n        return this.props.tabs ? this.props.tabs.map((tab, i) => {\n            return (\n                <li onClick={() => this.props.onTabChange(i)} key={i} style={tabStyle} className={tab.isActive ? 'active' : ''}>\n                    <span>{tab.title}</span>\n                </li>\n            );\n        }) : [];\n    }\n\n    getTabStyle = () => {\n        const numberOfTabs = this.props.tabs.length;\n        if (numberOfTabs) {\n            const width = 100 / numberOfTabs;\n            return {\n                width: `${width}%`,\n                height: '33px'\n            }\n        }\n        return {};\n    }\n\n    getActiveSliderStyle = () => {\n        const numberOfTabs = this.props.tabs.length;\n        if (numberOfTabs) {\n            const width = 100 / numberOfTabs;\n            const activeTabIndex = this._getActiveTabIndex();\n            return {\n                width: `${width}%`,\n                height: '33px',\n                left: `${(width * activeTabIndex)}%`\n            }\n        }\n        return {};\n    }\n\n    showPrevButton = () => {\n        const activeIndex = this._getActiveTabIndex();\n        return activeIndex !== 0;\n    }\n\n    showNextButton = () => {\n        const activeIndex = this._getActiveTabIndex();\n        const lengthOfTabs = this.props.tabs.length;\n        return activeIndex < (lengthOfTabs - 1);\n    }\n\n    showFinishedBurtton = () => {\n        const activeIndex = this._getActiveTabIndex();\n        const lengthOfTabs = this.props.tabs.length;\n        return activeIndex === (lengthOfTabs - 1)\n    }\n\n    render() {\n        return (\n            <div className=\"tabs_container\">\n                <Card>\n                    <CardHeader\n                        title={this.props.title}\n                        subheader={this.props.subHeader}\n                    />\n                    <CardContent>\n                        <div className=\"tabs-block\">\n                            <div className=\"active-block\" style={this.getActiveSliderStyle()}></div>\n                            <ul>\n                                {\n                                    this.renderTabs()\n                                }\n                            </ul>\n                        </div>\n                        <div className=\"tab-body\">\n                            <Row>\n                                {\n                                    this._getActiveTabComponent()\n                                }\n                            </Row>\n                        </div>\n                        <div className=\"tab-footer\">\n                            {\n                                this.showPrevButton() ?\n                                    <Button\n                                        className=\"primary\"\n                                        onClick={this.props.onPrev}\n                                    >\n                                        Prev\n                                        </Button> : ''\n                            }\n                            {\n                                this.showNextButton() && !this.props.hideNextButton ?\n                                    <Button\n                                        className=\"primary\"\n                                        onClick={this.props.onNext}\n                                    >\n                                        Next\n                            </Button> : ''\n                            }\n                            {\n                                this.showFinishedBurtton() ?\n                                    <Button\n                                        className=\"primary\"\n                                        onClick={this.props.onFinish}\n                                    >\n                                        {this.props.finishText || 'Finish'}\n                            </Button> : ''\n                            }\n\n\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n\n    _getActiveTabIndex = () => {\n        return this.props.tabs.findIndex(tab => tab.isActive === true);\n    }\n\n    _getActiveTabComponent = () => {\n        const tabs = [...this.props.tabs];\n        const activeIndex = this._getActiveTabIndex();\n        return tabs[activeIndex] ? tabs[activeIndex].component : '';\n    }\n}\n\nexport default Tabs;"]},"metadata":{},"sourceType":"module"}