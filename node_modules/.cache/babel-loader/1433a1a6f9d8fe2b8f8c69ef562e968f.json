{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/FOA/FOA-trail/src/common/components/SliderBanner/SliderBanner.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Carousel, CarouselItem, CarouselControl, CarouselIndicators } from 'reactstrap';\nimport Button from '../Button/Button';\nimport './SliderBanner.scss';\n\nclass SliderBanner extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeIndex: 0,\n      animating: false\n    };\n\n    this.onNext = () => {\n      if (this.state.animating) return;\n      const nextIndex = this.state.activeIndex === this.props.items.length - 1 ? 0 : this.state.activeIndex + 1;\n      this.setState({\n        activeIndex: nextIndex\n      });\n    };\n\n    this.onPrev = () => {\n      if (this.state.animating) return;\n      const nextIndex = this.state.activeIndex === 0 ? this.props.items.length - 1 : this.state.activeIndex - 1;\n      this.setState({\n        activeIndex: nextIndex\n      });\n    };\n\n    this.goToIndex = newIndex => {\n      if (this.state.animating) return;\n      this.setState({\n        activeIndex: newIndex\n      });\n    };\n\n    this.onAnimating = animating => {\n      this.setState({\n        animating\n      });\n    };\n\n    this.slides = () => {\n      return this.props.items.map((item, i) => {\n        return React.createElement(CarouselItem, {\n          onExiting: () => this.onAnimating(true),\n          onExited: () => this.onAnimating(false),\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: item.src,\n          alt: item.altText || 'banner image',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"banner-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, item.caption), React.createElement(Button, {\n          className: \"primary\",\n          onClick: () => this.props.history.push({\n            pathname: '/get-quotes',\n            search: \"C=\".concat(item.path)\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Get Quotes\")));\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"slider-banner_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Carousel, {\n      activeIndex: this.state.activeIndex,\n      next: this.onNext,\n      previous: this.onPrev,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(CarouselIndicators, {\n      items: this.props.items,\n      activeIndex: this.state.activeIndex,\n      onClickHandler: this.goToIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), this.slides(), React.createElement(CarouselControl, {\n      direction: \"prev\",\n      directionText: \"Previous\",\n      onClickHandler: this.onPrev,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(CarouselControl, {\n      direction: \"next\",\n      directionText: \"Next\",\n      onClickHandler: this.onNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(SliderBanner);","map":{"version":3,"sources":["/Users/mayank/Desktop/FOA/FOA-trail/src/common/components/SliderBanner/SliderBanner.js"],"names":["React","Component","withRouter","Carousel","CarouselItem","CarouselControl","CarouselIndicators","Button","SliderBanner","state","activeIndex","animating","onNext","nextIndex","props","items","length","setState","onPrev","goToIndex","newIndex","onAnimating","slides","map","item","i","src","altText","caption","history","push","pathname","search","path","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n    Carousel,\n    CarouselItem,\n    CarouselControl,\n    CarouselIndicators\n  } from 'reactstrap';\nimport Button from '../Button/Button';\nimport './SliderBanner.scss';\n\nclass SliderBanner extends Component {\n    state = {\n        activeIndex: 0,\n        animating: false\n    }\n    \n    onNext = () => {\n        if (this.state.animating) return;\n        const nextIndex = this.state.activeIndex === this.props.items.length - 1 ? 0 : this.state.activeIndex + 1;\n        this.setState({\n            activeIndex: nextIndex\n        });\n    }\n\n    onPrev = () => {\n        if (this.state.animating) return;\n        const nextIndex = this.state.activeIndex === 0 ? this.props.items.length - 1 : this.state.activeIndex - 1;\n        this.setState({\n            activeIndex: nextIndex\n        });\n    }\n\n    goToIndex = (newIndex) => {\n        if (this.state.animating) return;\n        this.setState({\n            activeIndex: newIndex\n        });\n    }\n\n    onAnimating = (animating) => {\n        this.setState({\n            animating\n        });\n    }\n\n    slides = () => {\n        return this.props.items.map((item, i) => {\n            return (\n                <CarouselItem\n                onExiting={() => this.onAnimating(true)}\n                onExited={() => this.onAnimating(false)}\n                key={i}>\n                    <img src={item.src} alt={item.altText || 'banner image'} />\n                    <div className=\"banner-text\">\n                    <h2>{item.caption}</h2>\n                    <Button className=\"primary\" onClick={() => this.props.history.push({pathname:'/get-quotes', search:`C=${item.path}`})}>Get Quotes</Button>\n                    </div>\n                </CarouselItem>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"slider-banner_container\">\n                <Carousel\n                    activeIndex={this.state.activeIndex}\n                    next={this.onNext}\n                    previous={this.onPrev}\n                >\n                    <CarouselIndicators items={this.props.items} activeIndex={this.state.activeIndex} onClickHandler={this.goToIndex} />\n                    {this.slides()}\n                    <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.onPrev} />\n                    <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.onNext} />\n                </Carousel>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(SliderBanner);"]},"metadata":{},"sourceType":"module"}